webpackJsonp([0],[
/* 0 */,
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(0);
var errorHandler_1 = __webpack_require__(2);
/*
 * Logic related to making HTTP calls
 */
var HttpClient = /** @class */ (function () {
    function HttpClient() {
    }
    /*
     * Download JSON data from the app config file
     */
    HttpClient.loadAppConfiguration = function (filePath) {
        return __awaiter(this, void 0, void 0, function () {
            var data, xhr_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, $.ajax({
                                url: filePath,
                                type: 'GET',
                                dataType: 'json',
                            })];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, data];
                    case 2:
                        xhr_1 = _a.sent();
                        // Improve the default error message
                        throw errorHandler_1.ErrorHandler.getFromAjaxError(xhr_1, filePath);
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Get data from an API URL and handle retries if needed
     */
    HttpClient.callApi = function (url, method, dataToSend, authenticator) {
        return __awaiter(this, void 0, void 0, function () {
            var token, xhr1_1, xhr2_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, authenticator.getAccessToken()];
                    case 1:
                        token = _a.sent();
                        _a.label = 2;
                    case 2:
                        _a.trys.push([2, 4, , 11]);
                        return [4 /*yield*/, HttpClient._callApiWithToken(url, method, dataToSend, token)];
                    case 3: 
                    // Call the API
                    return [2 /*return*/, _a.sent()];
                    case 4:
                        xhr1_1 = _a.sent();
                        // Report Ajax errors if this is not a 401
                        if (xhr1_1.status !== 401) {
                            throw errorHandler_1.ErrorHandler.getFromAjaxError(xhr1_1, url);
                        }
                        // If we received a 401 then clear the failing access token from storage and get a new one
                        return [4 /*yield*/, authenticator.clearAccessToken()];
                    case 5:
                        // If we received a 401 then clear the failing access token from storage and get a new one
                        _a.sent();
                        return [4 /*yield*/, authenticator.getAccessToken()];
                    case 6:
                        token = _a.sent();
                        _a.label = 7;
                    case 7:
                        _a.trys.push([7, 9, , 10]);
                        return [4 /*yield*/, HttpClient._callApiWithToken(url, method, dataToSend, token)];
                    case 8: 
                    // Call the API again
                    return [2 /*return*/, _a.sent()];
                    case 9:
                        xhr2_1 = _a.sent();
                        // Report Ajax errors for the retry
                        throw errorHandler_1.ErrorHandler.getFromAjaxError(xhr2_1, url);
                    case 10: return [3 /*break*/, 11];
                    case 11: return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Do the work of calling the API
     */
    HttpClient._callApiWithToken = function (url, method, dataToSend, accessToken) {
        return __awaiter(this, void 0, void 0, function () {
            var dataToSendText;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        dataToSendText = dataToSend ? JSON.stringify(dataToSend) : '';
                        return [4 /*yield*/, $.ajax({
                                url: url,
                                data: dataToSendText,
                                dataType: 'json',
                                contentType: 'application/json',
                                type: method,
                                beforeSend: function (xhr) {
                                    if (accessToken !== null) {
                                        xhr.setRequestHeader('Authorization', 'Bearer ' + accessToken);
                                    }
                                },
                            })];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return HttpClient;
}());
exports.HttpClient = HttpClient;


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(0);
var uiError_1 = __webpack_require__(11);
var iframeWindowHelper_1 = __webpack_require__(4);
/*
 * A class to handle composing and reporting errors
 */
var ErrorHandler = /** @class */ (function () {
    function ErrorHandler() {
    }
    /*
     * Output fields from an AppError object, depending on what is populated
     */
    ErrorHandler.reportError = function (exception) {
        // Ensure that the error is of type UIError
        var error = ErrorHandler.getFromException(exception);
        // Only report real errors
        if (error.nonError) {
            return;
        }
        // Otherwise display the error
        this._outputError(error);
    };
    /*
     * Clear trace output
     */
    ErrorHandler.clear = function () {
        // Remove output
        var errorList = iframeWindowHelper_1.IFrameWindowHelper.getMainWindowElement('#error');
        errorList.html('');
        // Hide the clear button since
        var clearButton = iframeWindowHelper_1.IFrameWindowHelper.getMainWindowElement('#btnClearError');
        clearButton.addClass('hide');
    };
    /*
     * A non error is used to short circuit execution without displaying an error
     */
    ErrorHandler.getNonError = function () {
        return new uiError_1.UIError({
            nonError: true,
        });
    };
    /*
     * Sign in request errors most commonly mean a CORS error or that the API is unavailable
     */
    ErrorHandler.getFromOAuthRequest = function (e) {
        // Already handled errors
        if (e instanceof uiError_1.UIError) {
            return e;
        }
        var message = 'Authentication request error';
        if (e.message) {
            message += ": " + e.message;
        }
        // Update fields and use a status of zero to hint that it may be a CORS error
        return new uiError_1.UIError({
            message: message,
            statusCode: 0,
            area: 'OAuth / CORS',
            details: e.toString(),
        });
    };
    /*
     * Sign in response errors most commonly have OAuth error details
     */
    ErrorHandler.getFromOAuthResponse = function (e) {
        // Already handled errors
        if (e instanceof uiError_1.UIError) {
            return e;
        }
        // Handle OAuth errors
        var messagePrefix = 'Authentication response error';
        if (e.error && e.error_description) {
            return new uiError_1.UIError({
                message: messagePrefix + " : " + e.error,
                statusCode: 400,
                area: 'OAuth',
                details: e.error_description,
            });
        }
        var message = messagePrefix;
        if (e.message) {
            message += ": " + e.message;
        }
        return new uiError_1.UIError({
            message: message,
            statusCode: 400,
            area: 'OAuth',
            details: e.toString(),
        });
    };
    /*
     * Return an object for Ajax errors
     */
    ErrorHandler.getFromAjaxError = function (xhr, url) {
        // Already handled errors
        if (xhr instanceof uiError_1.UIError) {
            return xhr;
        }
        var error = new uiError_1.UIError({
            message: 'Error calling server',
            statusCode: xhr.status,
            area: 'Ajax',
            url: url,
        });
        if (xhr.status === 0) {
            error.area += ' / CORS';
            error.message = 'Cross origin request was not allowed';
        }
        else if (xhr.status === 200) {
            error.area = ' / JSON';
            error.message = 'Parsing JSON data failed';
        }
        else {
            // See if there is an API error
            var clientError = ErrorHandler._getApiErrorFromResponse(xhr.responseText);
            if (clientError && clientError.area && clientError.message && clientError.id) {
                error.area = "API / " + clientError.area;
                error.message = clientError.message;
                error.instanceId = clientError.id;
            }
        }
        return error;
    };
    /*
     * Return an error based on the exception type or properties
     */
    ErrorHandler.getFromException = function (e) {
        // Already handled errors
        if (e instanceof uiError_1.UIError) {
            return e;
        }
        // Well coded errors should derive from this base class
        if (e instanceof Error) {
            var uiError = new uiError_1.UIError({
                message: "Problem encountered",
                area: 'Exception',
                details: e.message,
            });
            uiError.stack = e.stack;
            return uiError;
        }
        // For other errors we just call toString
        return new uiError_1.UIError({
            message: 'Problem encountered',
            area: 'Exception',
            details: e.toString(),
        });
    };
    /*
     * Try to deserialize an API error object
     */
    ErrorHandler._getApiErrorFromResponse = function (responseText) {
        try {
            return JSON.parse(responseText);
        }
        catch (e) {
            return null;
        }
    };
    /*
     * Render the error to the UI
     */
    ErrorHandler._outputError = function (error) {
        var errorContainer = $('#error');
        errorContainer.text('');
        if (error.message.length > 0) {
            errorContainer.append($('<li>').html("Message : <b>" + error.message + "</b>"));
        }
        if (error.statusCode > -1) {
            errorContainer.append($('<li>').html("Status Code : <b>" + error.statusCode + "</b>"));
        }
        if (error.area.length > 0) {
            errorContainer.append($('<li>').html("Area : <b>" + error.area + "</b>"));
        }
        $('#error').append($('<li>').html("Id : <b>" + error.instanceId + "</b>"));
        if (error.url.length > 0) {
            errorContainer.append($('<li>').html("URL : <b>" + error.url + "</b>"));
        }
        $('#error').append($('<li>').html("Time : <b>" + error.time.toUTCString() + "</b>"));
        if (error.details.length > 0) {
            errorContainer.append($('<li>').html("Details : <b>" + error.details + "</b>"));
        }
        // Stack info is available for debugging
        // $('#error').append($('<li>').html(`Stack : <b>${error.stack}</b>`));
        // Show the clear button
        var clearButton = $('#btnClearError');
        if (clearButton.hasClass('hide')) {
            clearButton.removeClass('hide');
        }
    };
    return ErrorHandler;
}());
exports.ErrorHandler = ErrorHandler;


/***/ }),
/* 3 */,
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(0);
/*
 * A helper class to ensure that any OAuth trace or error messages are routed to the main window and not the frame
 */
var IFrameWindowHelper = /** @class */ (function () {
    function IFrameWindowHelper() {
    }
    /*
     * Get the main window item
     */
    IFrameWindowHelper.getMainWindowElement = function (itemName) {
        if (IFrameWindowHelper.isIFrameOperation()) {
            return window.parent.$(itemName);
        }
        else {
            return $(itemName);
        }
    };
    /*
     * Detect whether a particular operation is running on the silent renew iframe
     */
    IFrameWindowHelper.isIFrameOperation = function () {
        return (window.parent && window !== window.parent);
    };
    return IFrameWindowHelper;
}());
exports.IFrameWindowHelper = IFrameWindowHelper;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/*
 * URL utilities
 */
var UrlHelper = /** @class */ (function () {
    function UrlHelper() {
    }
    /*
     * Parse the hash fragment into an object
     */
    UrlHelper.getLocationHashData = function () {
        var params = {};
        var idx = location.hash.indexOf('#');
        if (idx !== -1) {
            var hashParams = location.hash.slice(idx + 1).split('&');
            hashParams.map(function (hash) {
                var _a = hash.split('='), key = _a[0], val = _a[1];
                params[key] = decodeURIComponent(val);
            });
        }
        return params;
    };
    return UrlHelper;
}());
exports.UrlHelper = UrlHelper;


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(7);
module.exports = __webpack_require__(9);


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(8);


/***/ }),
/* 8 */,
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(0);
var authenticator_1 = __webpack_require__(10);
var errorHandler_1 = __webpack_require__(2);
var httpClient_1 = __webpack_require__(1);
var oauthLogger_1 = __webpack_require__(12);
var router_1 = __webpack_require__(13);
/*
 * The application class
 */
var App = /** @class */ (function () {
    /*
     * Class setup
     */
    function App() {
        window.$ = $;
        this._setupCallbacks();
        this._spaConfig = null;
        this._authenticator = null;
        this._router = null;
    }
    /*
     * The entry point for the SPA
     */
    App.prototype.execute = function () {
        return __awaiter(this, void 0, void 0, function () {
            var e_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // Set up click handlers
                        $('#btnHome').click(this._onHome);
                        $('#btnRefreshData').click(this._onRefreshData);
                        $('#btnExpireAccessToken').click(this._onExpireToken);
                        $('#btnLogout').click(this._onLogout);
                        $('#btnClearError').click(this._onClearError);
                        $('#btnClearTrace').click(this._onClearTrace);
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 7, , 8]);
                        return [4 /*yield*/, this._downloadSpaConfig()];
                    case 2:
                        _a.sent();
                        return [4 /*yield*/, this._configureAuthentication()];
                    case 3:
                        _a.sent();
                        return [4 /*yield*/, this._handleLoginResponse()];
                    case 4:
                        _a.sent();
                        return [4 /*yield*/, this._getUserClaims()];
                    case 5:
                        _a.sent();
                        return [4 /*yield*/, this._runPage()];
                    case 6:
                        _a.sent();
                        return [3 /*break*/, 8];
                    case 7:
                        e_1 = _a.sent();
                        errorHandler_1.ErrorHandler.reportError(e_1);
                        return [3 /*break*/, 8];
                    case 8: return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Download application configuration
     */
    App.prototype._downloadSpaConfig = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, httpClient_1.HttpClient.loadAppConfiguration('spa.config.json')];
                    case 1:
                        _a._spaConfig = _b.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Point OIDC logging to our application logger and then supply OAuth settings
     */
    App.prototype._configureAuthentication = function () {
        this._authenticator = new authenticator_1.Authenticator(this._spaConfig.oauth);
        oauthLogger_1.OAuthLogger.initialize();
        this._router = new router_1.Router(this._spaConfig.app.apiBaseUrl, this._authenticator);
    };
    /*
     * Handle login responses on page load so that we have tokens and can call APIs
     */
    App.prototype._handleLoginResponse = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._authenticator.handleLoginResponse()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Download user claims from the API, which can contain any data we like
     */
    App.prototype._getUserClaims = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._router.executeUserInfoView()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Once login processing has completed, start listening for hash changes
     */
    App.prototype._runPage = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: 
                    // Get data and create the view HTML
                    return [4 /*yield*/, this._router.executeView()];
                    case 1:
                        // Get data and create the view HTML
                        _a.sent();
                        // Listen for changes to the SPA location
                        $(window).on('hashchange', this._onHashChange);
                        return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Change the view based on the hash URL and catch errors
     */
    App.prototype._onHashChange = function () {
        return __awaiter(this, void 0, void 0, function () {
            var e_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        oauthLogger_1.OAuthLogger.updateLevelIfRequired();
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this._router.executeView()];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        e_2 = _a.sent();
                        errorHandler_1.ErrorHandler.reportError(e_2);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Button handler to reset the hash location to the list view and refresh
     */
    App.prototype._onHome = function () {
        location.hash = '#';
    };
    /*
     * Force a page reload
     */
    App.prototype._onRefreshData = function () {
        return __awaiter(this, void 0, void 0, function () {
            var e_3;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this._router.executeView()];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        e_3 = _a.sent();
                        errorHandler_1.ErrorHandler.reportError(e_3);
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Force a new access token to be retrieved
     */
    App.prototype._onExpireToken = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._authenticator.expireAccessToken()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Start a logout request
     */
    App.prototype._onLogout = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._authenticator.startLogout()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Clear error output
     */
    App.prototype._onClearError = function () {
        errorHandler_1.ErrorHandler.clear();
    };
    /*
     * Clear trace output
     */
    App.prototype._onClearTrace = function () {
        oauthLogger_1.OAuthLogger.clear();
    };
    /*
     * Plumbing to ensure that the this parameter is available in async callbacks
     */
    App.prototype._setupCallbacks = function () {
        this._configureAuthentication = this._configureAuthentication.bind(this);
        this._handleLoginResponse = this._handleLoginResponse.bind(this);
        this._getUserClaims = this._getUserClaims.bind(this);
        this._runPage = this._runPage.bind(this);
        this._onHashChange = this._onHashChange.bind(this);
        this._onHome = this._onHome.bind(this);
        this._onRefreshData = this._onRefreshData.bind(this);
        this._onExpireToken = this._onExpireToken.bind(this);
        this._onLogout = this._onLogout.bind(this);
    };
    return App;
}());
/*
 * Run the application
 */
var app = new App();
app.execute();


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var Oidc = __webpack_require__(3);
var errorHandler_1 = __webpack_require__(2);
/*
 * The entry point for initiating login and token requests
 */
var Authenticator = /** @class */ (function () {
    /*
     * Class setup
     */
    function Authenticator(config) {
        // Create OIDC settings from our application configuration
        var settings = {
            authority: config.authority,
            client_id: config.clientId,
            redirect_uri: config.appUri,
            silent_redirect_uri: config.appUri,
            post_logout_redirect_uri: "" + config.appUri + config.postLogoutPath,
            scope: config.scope,
            response_type: 'token id_token',
            loadUserInfo: false,
            automaticSilentRenew: true,
            monitorSession: false,
        };
        // Create the user manager
        this._userManager = new Oidc.UserManager(settings);
        this._userManager.events.addSilentRenewError(this._onSilentTokenRenewalError);
        this._setupCallbacks();
    }
    /*
     * Clear the current access token from storage to force a login
     */
    Authenticator.prototype.clearAccessToken = function () {
        return __awaiter(this, void 0, void 0, function () {
            var user;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._userManager.getUser()];
                    case 1:
                        user = _a.sent();
                        if (user) {
                            user.access_token = '';
                            this._userManager.storeUser(user);
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /*
     * This method is for testing only, to make the access token in storage act like it has expired
     */
    Authenticator.prototype.expireAccessToken = function () {
        return __awaiter(this, void 0, void 0, function () {
            var user;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._userManager.getUser()];
                    case 1:
                        user = _a.sent();
                        if (user) {
                            // Set the stored value to expired and also corrupt the token so that there is a 401 if it is sent to an API
                            user.expires_at = Date.now() / 1000 + 30;
                            user.access_token = 'x' + user.access_token + 'x';
                            // Update OIDC so that it silently renews the token almost immediately
                            this._userManager.storeUser(user);
                            this._userManager.stopSilentRenew();
                            this._userManager.startSilentRenew();
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Get Open Id Connect claims
     */
    Authenticator.prototype.getOpenIdConnectUserClaims = function () {
        return __awaiter(this, void 0, void 0, function () {
            var user;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._userManager.getUser()];
                    case 1:
                        user = _a.sent();
                        if (user && user.profile) {
                            return [2 /*return*/, user.profile];
                        }
                        return [2 /*return*/, null];
                }
            });
        });
    };
    /*
     * Get an access token and login if required
     */
    Authenticator.prototype.getAccessToken = function () {
        return __awaiter(this, void 0, void 0, function () {
            var user, data, e_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._userManager.getUser()];
                    case 1:
                        user = _a.sent();
                        if (user && user.access_token && user.access_token.length > 0) {
                            return [2 /*return*/, user.access_token];
                        }
                        data = {
                            hash: location.hash.length > 0 ? location.hash : '#',
                        };
                        _a.label = 2;
                    case 2:
                        _a.trys.push([2, 4, , 5]);
                        // Start a login redirect
                        return [4 /*yield*/, this._userManager.signinRedirect({ state: JSON.stringify(data) })];
                    case 3:
                        // Start a login redirect
                        _a.sent();
                        // Short circuit SPA page execution
                        throw errorHandler_1.ErrorHandler.getNonError();
                    case 4:
                        e_1 = _a.sent();
                        // Handle OAuth specific errors, such as those calling the metadata endpoint
                        throw errorHandler_1.ErrorHandler.getFromOAuthRequest(e_1);
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Handle the response from the authorization server
     */
    Authenticator.prototype.handleLoginResponse = function () {
        return __awaiter(this, void 0, void 0, function () {
            var user, data, e_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // See if there is anything to do
                        if (location.hash.indexOf('state') === -1) {
                            return [2 /*return*/];
                        }
                        if (!(window.top === window.self)) return [3 /*break*/, 5];
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this._userManager.signinRedirectCallback()];
                    case 2:
                        user = _a.sent();
                        data = JSON.parse(user.state);
                        location.replace(location.pathname + data.hash);
                        return [3 /*break*/, 4];
                    case 3:
                        e_2 = _a.sent();
                        // Handle OAuth response errors
                        throw errorHandler_1.ErrorHandler.getFromOAuthResponse(e_2);
                    case 4: return [3 /*break*/, 7];
                    case 5: 
                    // Handle silent token renewal responses and note that errors are swallowed by OIDC
                    return [4 /*yield*/, this._userManager.signinSilentCallback()];
                    case 6:
                        // Handle silent token renewal responses and note that errors are swallowed by OIDC
                        _a.sent();
                        // Short circuit SPA page execution
                        throw errorHandler_1.ErrorHandler.getNonError();
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Redirect in order to log out at the authorization server and remove vendor cookies
     */
    Authenticator.prototype.startLogout = function () {
        return __awaiter(this, void 0, void 0, function () {
            var e_3;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this._userManager.signoutRedirect()];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        e_3 = _a.sent();
                        errorHandler_1.ErrorHandler.reportError(errorHandler_1.ErrorHandler.getFromOAuthRequest(e_3));
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Report any silent token renewal errors
     */
    Authenticator.prototype._onSilentTokenRenewalError = function (e) {
        // Login required is not a real error - we will just redirect the user to login when the API returns 401
        if (e.error !== 'login_required') {
            var error = errorHandler_1.ErrorHandler.getFromOAuthResponse(e);
            errorHandler_1.ErrorHandler.reportError(error);
        }
    };
    /*
* Plumbing to ensure that the this parameter is available in async callbacks
*/
    Authenticator.prototype._setupCallbacks = function () {
        this.clearAccessToken = this.clearAccessToken.bind(this);
        this.getAccessToken = this.getAccessToken.bind(this);
        this._onSilentTokenRenewalError = this._onSilentTokenRenewalError.bind(this);
    };
    return Authenticator;
}());
exports.Authenticator = Authenticator;


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
// Range for random error ids
var MIN_ERROR_ID = 10000;
var MAX_ERROR_ID = 65535;
/*
 * A simple error class for the UI
 */
var UIError = /** @class */ (function (_super) {
    __extends(UIError, _super);
    /*
     * Let callers supply a subset of named parameters via object destructuring
     */
    function UIError(_a) {
        var _newTarget = this.constructor;
        var _b = _a.message, message = _b === void 0 ? '' : _b, _c = _a.statusCode, statusCode = _c === void 0 ? -1 : _c, _d = _a.area, area = _d === void 0 ? '' : _d, _e = _a.instanceId, instanceId = _e === void 0 ? Math.floor(Math.random() * (MAX_ERROR_ID - MIN_ERROR_ID + 1) + MIN_ERROR_ID) : _e, _f = _a.url, url = _f === void 0 ? '' : _f, _g = _a.time, time = _g === void 0 ? new Date() : _g, _h = _a.details, details = _h === void 0 ? '' : _h, _j = _a.nonError, nonError = _j === void 0 ? false : _j;
        var _this = _super.call(this, message) || this;
        // Ensure that instanceof works
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this._statusCode = statusCode;
        _this._area = area;
        _this._instanceId = instanceId;
        _this._url = url;
        _this._time = time;
        _this._details = details;
        _this._nonError = nonError;
        return _this;
    }
    Object.defineProperty(UIError.prototype, "statusCode", {
        get: function () {
            return this._statusCode;
        },
        set: function (statusCode) {
            this._statusCode = statusCode;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIError.prototype, "area", {
        get: function () {
            return this._area;
        },
        set: function (area) {
            this._area = area;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIError.prototype, "instanceId", {
        get: function () {
            return this._instanceId;
        },
        set: function (instanceId) {
            this._instanceId = instanceId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIError.prototype, "url", {
        get: function () {
            return this._url;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIError.prototype, "time", {
        get: function () {
            return this._time;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIError.prototype, "details", {
        get: function () {
            return this._details;
        },
        set: function (details) {
            this._details = details;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIError.prototype, "nonError", {
        get: function () {
            return this._nonError;
        },
        enumerable: true,
        configurable: true
    });
    return UIError;
}(Error));
exports.UIError = UIError;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(0);
var Oidc = __webpack_require__(3);
var iframeWindowHelper_1 = __webpack_require__(4);
var urlHelper_1 = __webpack_require__(5);
/*
 * Capture OIDC log output
 */
var OAuthLogger = /** @class */ (function () {
    function OAuthLogger() {
    }
    /*
     * Initialize logging and set the initial log level
     */
    OAuthLogger.initialize = function () {
        Oidc.Log.logger = OAuthLogger;
        OAuthLogger.setLevel(OAuthLogger._getUrlLogLevel());
    };
    /*
     * Set the OIDC log level and update the UI
     */
    OAuthLogger.setLevel = function (level) {
        // Set the log level in the session so that it is inherited on page reloads and by the renewal iframe
        Oidc.Log.level = level;
        sessionStorage.setItem('basicSpa.logLevel', level.toString());
        // Clear the log if setting the level on the main window
        if (!iframeWindowHelper_1.IFrameWindowHelper.isIFrameOperation()) {
            OAuthLogger.clear();
        }
        // Hide or show trace details
        var traceContainer = iframeWindowHelper_1.IFrameWindowHelper.getMainWindowElement('.tracecontainer');
        if (level === Oidc.Log.NONE) {
            traceContainer.addClass('hide');
        }
        else {
            traceContainer.removeClass('hide');
        }
        // Hide the trace button until we have output
        var clearButton = iframeWindowHelper_1.IFrameWindowHelper.getMainWindowElement('#btnTrace');
        clearButton.addClass('hide');
    };
    /*
     * Update the OIDC log level if the hash log parameter has changed
     */
    OAuthLogger.updateLevelIfRequired = function () {
        // Get old and new levels
        var oldLevel = OAuthLogger._getStoredLogLevel();
        var newLevel = OAuthLogger._getUrlLogLevel();
        // Update if required
        if (newLevel !== oldLevel) {
            OAuthLogger.setLevel(newLevel);
        }
    };
    /*
     * Clear trace output
     */
    OAuthLogger.clear = function () {
        // Remove output
        var traceList = iframeWindowHelper_1.IFrameWindowHelper.getMainWindowElement('#trace');
        traceList.html('');
        // Hide the clear button since there is nothing to clear
        var clearButton = iframeWindowHelper_1.IFrameWindowHelper.getMainWindowElement('#btnClearTrace');
        clearButton.addClass('hide');
    };
    /*
     * Uncomment to see OIDC messages
     */
    OAuthLogger.debug = function () {
        OAuthLogger._output('Oidc.Debug', arguments);
    };
    OAuthLogger.info = function () {
        OAuthLogger._output('Oidc.Info', arguments);
    };
    OAuthLogger.warn = function () {
        OAuthLogger._output('Oidc.Warn', arguments);
    };
    OAuthLogger.error = function () {
        OAuthLogger._output('Oidc.Error', arguments);
    };
    /*
     * Get the log level from the URL's hash parameter, such as #log=info
     */
    OAuthLogger._getUrlLogLevel = function () {
        var validLevels = new Map([
            ['none', Oidc.Log.NONE],
            ['debug', Oidc.Log.DEBUG],
            ['info', Oidc.Log.INFO],
            ['warn', Oidc.Log.WARN],
            ['error', Oidc.Log.ERROR],
        ]);
        // If a value such as log=info is present in the URL then return the numeric level for info
        var hashData = urlHelper_1.UrlHelper.getLocationHashData();
        if (hashData.log) {
            var foundLevel = validLevels.get(hashData.log);
            if (foundLevel !== undefined) {
                return foundLevel;
            }
        }
        // Otherwise return the stored value or default to no logging
        return OAuthLogger._getStoredLogLevel();
    };
    /*
     * Get the value from session storage if it exists
     */
    OAuthLogger._getStoredLogLevel = function () {
        var oldLevelString = sessionStorage.getItem('basicSpa.logLevel');
        if (oldLevelString) {
            return parseInt(oldLevelString, 10);
        }
        return Oidc.Log.NONE;
    };
    /*
     * Handle log output
     */
    OAuthLogger._output = function (prefix, args) {
        // Get the output
        var text = Array.prototype.slice.call(args).join(' : ');
        var html = "<b>" + prefix + "</b> : " + text;
        // Make sure any trace info on the hidden iframe is routed to the main window
        var traceList = iframeWindowHelper_1.IFrameWindowHelper.getMainWindowElement('#trace');
        traceList.append($('<li>').html(html));
        // Make sure the trace is visible
        var clearButton = iframeWindowHelper_1.IFrameWindowHelper.getMainWindowElement('#btnClearTrace');
        if (clearButton.hasClass('hide')) {
            clearButton.removeClass('hide');
        }
    };
    return OAuthLogger;
}());
exports.OAuthLogger = OAuthLogger;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(0);
var urlHelper_1 = __webpack_require__(5);
var listView_1 = __webpack_require__(14);
var logoutView_1 = __webpack_require__(15);
var transactionsView_1 = __webpack_require__(16);
var userInfoView_1 = __webpack_require__(17);
/*
 * A very primitive router to deal with switching views
 */
var Router = /** @class */ (function () {
    /*
     * Initialize the current view
     */
    function Router(apiBaseUrl, authenticator) {
        this._apiBaseUrl = apiBaseUrl;
        this._authenticator = authenticator;
    }
    /*
     * Execute a view based on the hash URL data
     */
    Router.prototype.executeView = function () {
        return __awaiter(this, void 0, void 0, function () {
            var oldView, hashData;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // Disable buttons until ready
                        $('.initiallydisabled').prop('disabled', true);
                        $('.initiallydisabled').addClass('disabled');
                        oldView = this._currentView;
                        hashData = urlHelper_1.UrlHelper.getLocationHashData();
                        // Work out which view to show
                        if (hashData.loggedout) {
                            this._currentView = new logoutView_1.LogoutView();
                        }
                        else {
                            if (hashData.company) {
                                this._currentView = new transactionsView_1.TransactionsView(this._authenticator, this._apiBaseUrl, hashData.company);
                            }
                            else {
                                this._currentView = new listView_1.ListView(this._authenticator, this._apiBaseUrl);
                            }
                        }
                        // Update common elements of the frame window when running a new view
                        $('#error').text('');
                        // Unload the old view
                        if (oldView) {
                            oldView.unload();
                        }
                        // Run the new view
                        return [4 /*yield*/, this._currentView.execute()];
                    case 1:
                        // Run the new view
                        _a.sent();
                        // Enable buttons unless logged out
                        if (!hashData.loggedout) {
                            $('.initiallydisabled').prop('disabled', false);
                            $('.initiallydisabled').removeClass('disabled');
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Show the user info child view unless we are logged out
     */
    Router.prototype.executeUserInfoView = function () {
        return __awaiter(this, void 0, void 0, function () {
            var hashData, view;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        hashData = urlHelper_1.UrlHelper.getLocationHashData();
                        if (!!hashData.loggedout) return [3 /*break*/, 2];
                        view = new userInfoView_1.UserInfoView(this._authenticator, this._apiBaseUrl);
                        return [4 /*yield*/, view.execute()];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    return Router;
}());
exports.Router = Router;


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(0);
var httpClient_1 = __webpack_require__(1);
/*
 * Logic related to the list view
 */
var ListView = /** @class */ (function () {
    /*
     * Class setup
     */
    function ListView(authenticator, apiBaseUrl) {
        this._authenticator = authenticator;
        this._apiBaseUrl = apiBaseUrl;
        this._setupCallbacks();
    }
    /*
     * Wait for data then render it
     */
    ListView.prototype.execute = function () {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, httpClient_1.HttpClient.callApi(this._apiBaseUrl + "/companies", 'GET', null, this._authenticator)];
                    case 1:
                        data = _a.sent();
                        this._renderData(data);
                        return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Hide UI elements when the view unloads
     */
    ListView.prototype.unload = function () {
        $('.listcontainer').addClass('hide');
    };
    /*
     * Render data
     */
    ListView.prototype._renderData = function (companies) {
        // Show buttons and render
        $('.listcontainer').removeClass('hide');
        $('.panel-group').text('');
        companies.forEach(function (company) {
            // Format fields for display
            var formattedTargetUsd = Number(company.targetUsd).toLocaleString();
            var formattedInvestmentUsd = Number(company.investmentUsd).toLocaleString();
            // Render the company details
            var companyDiv = $("<div class='panel panel-default'>\n                                    <div class='panel-body'>\n                                      <div class='row'>\n                                        <div class='col-xs-1'>\n                                            <img src='images/" + company.id + ".svg' />\n                                        </div>\n                                        <div class='col-xs-2'>\n                                            <br/>\n                                            " + company.name + "\n                                        </div>\n                                        <div class='col-xs-3'>\n                                            <br/>\n                                            <a data-id=" + company.id + ">View Transactions</a>\n                                        </div>\n                                        <div class='col-xs-2 amount'>\n                                            <br/>\n                                            " + formattedTargetUsd + "<br/>\n                                        </div>\n                                        <div class='col-xs-2 amount'>\n                                            <br/>\n                                            " + formattedInvestmentUsd + "<br/>\n                                        </div>\n                                            <br/>\n                                            <div class='col-xs-2'>" + company.noInvestors + "</div>\n                                      </div>\n                                    </div>\n                                  </div>");
            // Update the DOM
            $('.panel-group').append(companyDiv);
        });
        // A click handler will change the view to look at transaction details
        $('a').on('click', this._selectCompanyTransactions);
    };
    /*
     * When a thumbnail is clicked we will request transactions data and then update the view
     */
    ListView.prototype._selectCompanyTransactions = function (e) {
        var id = $(e.target).attr('data-id');
        location.hash = "#company=" + id;
        e.preventDefault();
    };
    /*
     * Plumbing to ensure that the this parameter is available in async callbacks
     */
    ListView.prototype._setupCallbacks = function () {
        this._renderData = this._renderData.bind(this);
        this._selectCompanyTransactions = this._selectCompanyTransactions.bind(this);
    };
    return ListView;
}());
exports.ListView = ListView;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(0);
/*
 * Logic related to the logout view
 */
var LogoutView = /** @class */ (function () {
    function LogoutView() {
    }
    /*
     * Run the view
     */
    LogoutView.prototype.execute = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // Show logout details
                $('#loggedOut').removeClass('hide');
                return [2 /*return*/];
            });
        });
    };
    /*
     * Hide UI elements when the view unloads
     */
    LogoutView.prototype.unload = function () {
        $('#loggedOut').addClass('hide');
    };
    return LogoutView;
}());
exports.LogoutView = LogoutView;


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(0);
var httpClient_1 = __webpack_require__(1);
/*
 * Logic related to the transactions view
 */
var TransactionsView = /** @class */ (function () {
    /*
     * Class setup
     */
    function TransactionsView(authenticator, apiBaseUrl, companyId) {
        this._authenticator = authenticator;
        this._apiBaseUrl = apiBaseUrl;
        this._companyId = companyId;
        this._setupCallbacks();
    }
    /*
     * Wait for data then render it
     */
    TransactionsView.prototype.execute = function () {
        return __awaiter(this, void 0, void 0, function () {
            var url, data, uiError_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        url = this._apiBaseUrl + "/companies/" + this._companyId + "/transactions";
                        return [4 /*yield*/, httpClient_1.HttpClient.callApi(url, 'GET', null, this._authenticator)];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, this._renderData(data)];
                    case 2:
                        uiError_1 = _a.sent();
                        // If an invalid or unauthorized id is typed in the browser then return to the list page
                        if (uiError_1.statusCode === 403) {
                            location.hash = '#';
                        }
                        else {
                            throw uiError_1;
                        }
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Hide UI elements when the view unloads
     */
    TransactionsView.prototype.unload = function () {
        $('.transactionscontainer').addClass('hide');
    };
    /*
     * Render data after receiving it from the API
     */
    TransactionsView.prototype._renderData = function (data) {
        // Show buttons and render
        $('.transactionscontainer').removeClass('hide');
        $('.authenticated').removeClass('hide');
        $('.transactionslist').text('');
        $('.transactionsheader').text("Transactions for " + data.company.name);
        data.transactions.forEach(function (transaction) {
            // Format fields for display
            var formattedAmountUsd = Number(transaction.amountUsd).toLocaleString();
            // Render the UI
            var transactionDiv = $("<div class='item col-xs-3'>\n                                      <div class='thumbnail'>\n                                        <div class='caption row'>\n                                          <div class='col-xs-6 text-left'>Transaction Id</div>\n                                          <div class='col-xs-6 text-right link'>" + transaction.id + "</div>\n                                        </div>\n                                        <div class='caption row'>\n                                          <div class='col-xs-6 text-left'>Investor Id</div>\n                                          <div class='col-xs-6 text-right link'>" + transaction.investorId + "</div>\n                                        </div>\n                                        <div class='caption row'>\n                                          <div class='col-xs-6 text-left'>Amount USD</div>\n                                          <div class='col-xs-6 text-right amount'>" + formattedAmountUsd + "</div>\n                                        </div>\n                                      </div>\n                                    </div>");
            // Update the DOM
            $('.transactionslist').append(transactionDiv);
        });
    };
    /*
     * Plumbing to ensure that the this parameter is available in async callbacks
     */
    TransactionsView.prototype._setupCallbacks = function () {
        this._renderData = this._renderData.bind(this);
    };
    return TransactionsView;
}());
exports.TransactionsView = TransactionsView;


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(0);
var httpClient_1 = __webpack_require__(1);
/*
 * Logic related to user info
 */
var UserInfoView = /** @class */ (function () {
    /*
     * Class setup
     */
    function UserInfoView(authenticator, apiBaseUrl) {
        this._authenticator = authenticator;
        this._apiBaseUrl = apiBaseUrl;
        this._setupCallbacks();
    }
    /*
     * Wait for data then render it
     */
    UserInfoView.prototype.execute = function () {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, httpClient_1.HttpClient.callApi(this._apiBaseUrl + "/userclaims/current", 'GET', null, this._authenticator)];
                    case 1:
                        data = _a.sent();
                        this._renderData(data);
                        return [2 /*return*/];
                }
            });
        });
    };
    /*
     * Render data
     */
    UserInfoView.prototype._renderData = function (claims) {
        if (claims.givenName && claims.familyName) {
            $('.logincontainer').removeClass('hide');
            $('.logintext').text(claims.givenName + " " + claims.familyName);
        }
    };
    /*
     * Plumbing to ensure that the this parameter is available in async callbacks
     */
    UserInfoView.prototype._setupCallbacks = function () {
        this._renderData = this._renderData.bind(this);
    };
    return UserInfoView;
}());
exports.UserInfoView = UserInfoView;


/***/ })
],[6]);