service: basicapi

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-west-2
  profile: default

functions:
  authorize:
    handler: build/handler.authorize
    cors:
      origin: ${self:custom.trustedOrigin}

  getUserClaims:
    handler: build/handler.getUserClaims
    events:
      - http: 
          path: /userclaims/current
          method: get
          authorizer: authorize
          cors:
            origin: ${self:custom.trustedOrigin}

  getCompanyList:
    handler: build/handler.getCompanyList
    events:
      - http: 
          path: /companies
          method: get
          authorizer: authorize
          cors:
            origin: ${self:custom.trustedOrigin}

  getCompanyTransactions:
    handler: build/handler.getCompanyTransactions
    events:
      - http: 
          path: /companies/{id}/transactions
          method: get
          authorizer: authorize
          cors:
            origin: ${self:custom.trustedOrigin}
          request: 
            parameters: 
              paths: 
                id: true

# Include non development dependencies only so that the upload size is small - see below links:
#   https://github.com/serverless/serverless/issues/569
#   https://gist.github.com/ugnb/0ca7d9ac5c3efe4171d0f33e48a34189#file-serverless-yml
#
# On Windows download the zip and unzip tools from these URLs:
#   http://gnuwin32.sourceforge.net/packages/zip.htm
#   http://gnuwin32.sourceforge.net/packages/unzip.htm
custom:
  trustedOrigin: 'http://serverless.spa.com.s3-website.eu-west-2.amazonaws.com'
  scripts:
    hooks:
      'after:package:createDeploymentArtifacts': >
        (cd .serverless && unzip -qq basicapi.zip -d basicapi && cd ..) &&
        (cd .serverless/basicapi && npm install --only=prod > /dev/null 2>&1  && cd .. && cd ..) &&
        (cd .serverless/basicapi && zip -q -FSr ../basicapi.zip . && cd .. && cd ..)

# Response types are listed here
# https://docs.aws.amazon.com/apigateway/latest/developerguide/supported-gateway-response-types.html
resources:
  Resources:
    InvalidTokenGatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'${self:custom.trustedOrigin}'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'${self:custom.trustedOrigin}'"
        ResponseType: ACCESS_DENIED
        ResponseTemplates:
          application/json: |
            {
              "message": "$context.authorizer.errorMessage"
            }
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'

# Node modules are excluded here and managed via the above hook instead
package:
  exclude:
  - node_modules/**/*
  - src/**
  - test/**
  - ts*.json

plugins:
  - serverless-plugin-scripts